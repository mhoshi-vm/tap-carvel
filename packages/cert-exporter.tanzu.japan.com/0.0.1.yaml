apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: cert-exporter.tanzu.japan.com.0.0.1
spec:
  refName: cert-exporter.tanzu.japan.com
  version: 0.0.1
  valuesSchema:
    openAPIv3:
      title: cert-exporter.tanzu-jp values schema
      properties:
        namespaces:
          description: namespaces to export secret
          items:
            type: string
          type: array
        keyname:
          type: string
          description: key name
        tls_crt:
          type: string
          description: TLS Certificate
        tls_key:
          type: string
          description: TLS Key
  template:
    spec:
      fetch:
      - inline:
          paths:
            config/base.yaml: |
              apiVersion: v1
              kind: Namespace
              metadata:
                name: cert-exporter
              ---
              apiVersion: secretgen.carvel.dev/v1alpha1
              kind: SecretExport
              metadata:
                name: secret-export
                namespace: cert-exporter
              spec:
                toNamespaces: []
        path: config/
      template:
      - ytt:
          ignoreUnknownComments: true
          paths:
          - config/
          inline:
            paths:
              overlay.yaml: |
                #@ load("@ytt:data", "data")
                #@ load("@ytt:base64", "base64")
                #@ load("@ytt:overlay", "overlay")
                
                #@ secretName = data.values.keyname
                #@ namespaces = data.values.namespaces
                
                #@overlay/match by=overlay.subset({"kind": "SecretExport"})
                ---
                metadata:
                  #@overlay/match missing_ok=True
                  name: #@ secretName
                spec:
                  #@overlay/match missing_ok=True
                  toNamespaces: #@ namespaces
                
                #@overlay/append
                ---
                apiVersion: v1
                data:
                  tls.crt: #@ base64.encode(data.values.tls_crt)
                  tls.key: #@ base64.encode(data.values.tls_key)
                kind: Secret
                metadata:
                  name: #@ secretName
                  namespace: cert-exporter
                type: kubernetes.io/tls
                
                #@ for namespace in namespaces:
                #@overlay/append
                ---
                apiVersion: secretgen.carvel.dev/v1alpha1
                kind: SecretImport
                metadata:
                  name: #@ secretName
                  namespace: #@ namespace
                spec:
                  fromNamespace: cert-exporter
                #@ end
      deploy:
        - kapp: {}
