apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  name: codegen-template
spec:
  urlPath: .status.outputs.url
  revisionPath: .status.outputs.branch

  ytt: |
    #@ load("@ytt:data", "data")
    #@
    #@ git_url = "https://github.com/vmware-tanzu/application-accelerator-samples"
    #@ git_branch = "main"
    #@ 
    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end
    #@ 
    #@ def merged_tekton_params():
    #@   params = []
    #@   params.append({ "name": "secret-name", "value": "jenkins-secret" })
    #@   params.append({ "name": "job-name", "value": "test-job" })
    #@   params.append({ "name": "job-params", "value": [ { "name": "GIT_URL", "value": git_url }, { "name": "GIT_BRANCH", "value": git_branch }, { "name": "WORKLOAD",  "value": data.values.workload.metadata.name }, { "name": "NAMESPACE", "value": data.values.workload.metadata.namespace } ] })
    #@   if hasattr(data.values, "params") and hasattr(data.values.params, "testing_pipeline_params"):
    #@     for param in data.values.params["testing_pipeline_params"]:
    #@       params.append({ "name": param, "value": data.values.params["testing_pipeline_params"][param] })
    #@     end
    #@   end
    #@   params.append({ "name": "source-url", "value": data.values.source.url })
    #@   params.append({ "name": "source-revision", "value": data.values.source.revision })
    #@   return params
    #@ end
    ---
    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: #@ "{}-codegen".format(data.values.workload.metadata.name)
      labels: #@ merge_labels({ "app.kubernetes.io/component": "codegen" })
      annotations:
        generated-git-url: #@ git_url
        generated-git-branch: #@ git_branch
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      runTemplateRef:
        name: codegen-run

      inputs:
        tekton-params: #@ merged_tekton_params()