#@ load("@ytt:data", "data")
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: kbld-task
spec:
  params:
    - name: files
      type: string
      description: >
        base64-encoded json map of files to write to registry, for example -
        eyAiUkVBRE1FLm1kIjogIiMgUmVhZG1lIiB9
    - name: ca_cert_data
      type: string
      default: ""
      description: >
        PEM encoded certificate data for the image registry where the files
        will be pushed to.
  results:
    - description: Updated config
      name: config
  steps:
    - name: main
      env:
      - name: "DOCKER_CONFIG"
        value: "/tekton/home/.docker/"
      - name: "HOME"
        value: "/tekton/home/"
      image: #@ data.values.kbld_image
      script: |-
        #!/usr/bin/env bash

        set -o errexit
        set -o pipefail
        set -o xtrace

        cd `mktemp -d`

        echo -e "$(params.files)" | base64 --decode > files.json
        eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value) > \(.key)"')"

        mkdir -p .imgpkg

        kbld_params=""
        if [[ ! -z "$(params.ca_cert_data)" ]]; then
          certs_dir=$(mktemp -d)
          echo "$(params.ca_cert_data)" > $certs_dir/cert
          kbld_params="--registry-ca-cert-path=$certs_dir/cert"
        fi

        kbld ${kbld_params} -f . --imgpkg-lock-output .imgpkg/images.yml

        cat files.json | jq '. + {".imgpkg/images.yml":"'`cat .imgpkg/images.yml`'"}' | tee "$(results.config.path))"
